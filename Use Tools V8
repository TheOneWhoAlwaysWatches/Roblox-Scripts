-- ‚öîÔ∏è DEMONIC ULTRA TOOL SPAMMER ‚Äî V9 Hybrid Edition (Auto-On + Safe Spam)
local Players = game:GetService("Players")
local RunService = game:GetService("RunService")

local player = Players.LocalPlayer
getgenv().TDW_HIT_TIMESTAMPS = {}

-- UI Setup
local screenGui = Instance.new("ScreenGui")
screenGui.Name = "DemonicToolGui"
screenGui.Parent = game.CoreGui
screenGui.ResetOnSpawn = false

local toolButton = Instance.new("TextButton")
toolButton.Name = "AttackToggle"
toolButton.Parent = screenGui
toolButton.Position = UDim2.new(0.5, -40, 0.85, -20)
toolButton.Size = UDim2.new(0, 80, 0, 40)
toolButton.BackgroundColor3 = Color3.fromRGB(0, 0, 0) -- midnight black background
toolButton.Font = Enum.Font.FredokaOne
toolButton.Text = "OFF"
toolButton.TextColor3 = Color3.fromRGB(139,0,0) -- blood red text
toolButton.TextSize = 22
toolButton.BorderSizePixel = 0

local stroke = Instance.new("UIStroke", toolButton)
stroke.Thickness = 3
stroke.Color = Color3.fromRGB(139,0,0) -- blood red border

-- Logic
local attacking = false
local activeTools = {}

-- Activates tool in safe spam loop
local function activateTool(tool)
	if activeTools[tool] then return end
	activeTools[tool] = true

	task.spawn(function()
		while attacking and tool.Parent == player.Character do
			pcall(function()
				for i = 1, 3 do -- üî• burst per tick
					tool:Activate()
					table.insert(getgenv().TDW_HIT_TIMESTAMPS, tick())
				end
			end)
			RunService.Heartbeat:Wait() -- per-tool loop timing
		end
		activeTools[tool] = nil
	end)

	tool.AncestryChanged:Connect(function(_, parent)
		if not attacking or parent ~= player.Character then
			activeTools[tool] = nil
		end
	end)
end

-- Equips all tools + starts activation
local function equipAndActivateAllTools()
	if not attacking or not player.Character then return end
	for _, tool in ipairs(player.Backpack:GetChildren()) do
		if tool:IsA("Tool") then
			tool.Parent = player.Character
			activateTool(tool)
		end
	end
	for _, tool in ipairs(player.Character:GetChildren()) do
		if tool:IsA("Tool") then
			activateTool(tool)
		end
	end
end

-- Toggle function
local function toggleAttack(forceOn)
	if forceOn ~= nil then attacking = forceOn else attacking = not attacking end
	toolButton.Text = attacking and "ON" or "OFF"
	toolButton.TextColor3 = attacking and Color3.fromRGB(255, 60, 60) or Color3.fromRGB(139,0,0) -- blood red ON, blood red OFF

	if attacking then
		equipAndActivateAllTools()
	else
		for _, tool in ipairs(player.Character:GetChildren()) do
			if tool:IsA("Tool") then
				tool.Parent = player.Backpack
			end
		end
		activeTools = {}
	end
end

toolButton.MouseButton1Click:Connect(toggleAttack)

-- Instantly equip + activate new tools
player.Backpack.ChildAdded:Connect(function(child)
	if child:IsA("Tool") and attacking then
		child.Parent = player.Character
		activateTool(child)
	end
end)

-- Auto-reactivate after respawn
player.CharacterAdded:Connect(function(char)
	char:WaitForChild("HumanoidRootPart")
	if attacking then
		task.defer(equipAndActivateAllTools)
	end
end)

-- üîÅ Frame stack = constant check for new/equipped tools
for _, event in ipairs({RunService.Heartbeat, RunService.Stepped, RunService.PostSimulation}) do
	event:Connect(function()
		if attacking then
			equipAndActivateAllTools()
		end
	end)
end

-- Auto-on at start
toggleAttack(true)
