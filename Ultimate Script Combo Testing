-- === SERVICES ===
local Players = game:GetService("Players")
local ReplicatedStorage = game:GetService("ReplicatedStorage")
local RunService = game:GetService("RunService")
local TweenService = game:GetService("TweenService")

local LocalPlayer = Players.LocalPlayer
local Tycoons = workspace:WaitForChild("Tycoons")

-- === POWER METER ===
local screenGui = Instance.new("ScreenGui")
screenGui.Name = "GodChainUI"
screenGui.Parent = game.CoreGui
screenGui.ResetOnSpawn = false

local powerLabel = Instance.new("TextLabel")
powerLabel.Name = "PowerMeter"
powerLabel.Parent = screenGui
powerLabel.Position = UDim2.new(0.5, -70, 0.85, 30)
powerLabel.Size = UDim2.new(0, 140, 0, 20)
powerLabel.BackgroundTransparency = 1
powerLabel.Font = Enum.Font.Code
powerLabel.TextColor3 = Color3.fromRGB(0, 255, 0)
powerLabel.TextSize = 18
powerLabel.Text = "Power: 0/s"

getgenv().TDW_HIT_TIMESTAMPS = {}

RunService.Heartbeat:Connect(function()
	local timestamps = getgenv().TDW_HIT_TIMESTAMPS
	if not timestamps then return end

	local now = tick()
	for i = #timestamps, 1, -1 do
		if now - timestamps[i] > 1 then
			table.remove(timestamps, i)
		end
	end

	local hitsPerSec = #timestamps
	if hitsPerSec > 600 then
		powerLabel.Text = "Overload: " .. hitsPerSec .. "/s"
		powerLabel.TextColor3 = Color3.fromRGB(255, 0, 0)
	else
		powerLabel.Text = "Power: " .. hitsPerSec .. "/s"
		powerLabel.TextColor3 = Color3.fromRGB(0, 255, 0)
	end
end)

-- === TOOL GRABBER ===
local excludedBases = { "Insanity", "Giant", "Dark", "Spike", "Web", "Strong" }
local allowedBases = { "Stone", "Magic", "Storm" }
local excludedBasesSet, allowedBasesSet = {}, {}

for _, base in ipairs(excludedBases) do excludedBasesSet[base] = true end
for _, base in ipairs(allowedBases) do allowedBasesSet[base] = true end

local function CollectTools()
	local character = LocalPlayer.Character
	local root = character and character:FindFirstChild("HumanoidRootPart")
	if not root then return end

	for _, v in ipairs(Tycoons:GetDescendants()) do
		if v:IsA("TouchTransmitter") and v.Parent and v.Parent.Parent and v.Parent.Parent.Name:find("GearGiver1") then
			local baseModel = v.Parent.Parent.Parent
			local baseName = baseModel and baseModel.Name
			if baseName and (allowedBasesSet[baseName] or not excludedBasesSet[baseName]) then
				firetouchinterest(root, v.Parent, 0)
				firetouchinterest(root, v.Parent, 1)
			end
		end
	end
end

CollectTools()
RunService.Heartbeat:Connect(CollectTools)

LocalPlayer.CharacterAdded:Connect(function()
	LocalPlayer.Character:WaitForChild("HumanoidRootPart")
	CollectTools()
end)

Tycoons.DescendantAdded:Connect(function(descendant)
	if descendant:IsA("TouchTransmitter") and descendant.Parent and descendant.Parent.Parent and descendant.Parent.Parent.Name:find("GearGiver1") then
		CollectTools()
	end
end)

-- === ULTRA FAST RESPAWN ===
local respawnRemote = ReplicatedStorage:FindFirstChild("Guide")
_G.UltraRespawnActive = true

local function hookHumanoidDied(character)
	local humanoid = character:FindFirstChildOfClass("Humanoid") or character:WaitForChild("Humanoid")
	humanoid.Died:Connect(function()
		if _G.UltraRespawnActive and respawnRemote then
			respawnRemote:FireServer()
		end
	end)
end

LocalPlayer.CharacterAdded:Connect(hookHumanoidDied)
if LocalPlayer.Character then hookHumanoidDied(LocalPlayer.Character) end

-- === DAMAGE AURA ===
local auraRange = 20
local auraSize = Vector3.new(30, 30, 30)
local auraParams = OverlapParams.new()
auraParams.FilterType = Enum.RaycastFilterType.Include

local function getChar(plr) return plr and plr.Character end
local function getHRP(plr)
	local char = getChar(plr)
	return char and char:FindFirstChild("HumanoidRootPart")
end

local function getValidTargets()
	local myHRP = getHRP(LocalPlayer)
	if not myHRP then return {}, {} end
	local playersInRange, chars = {}, {}
	for _, player in ipairs(Players:GetPlayers()) do
		if player ~= LocalPlayer then
			local hrp = getHRP(player)
			if hrp and (hrp.Position - myHRP.Position).Magnitude <= auraRange then
				table.insert(playersInRange, player)
				local char = getChar(player)
				if char then table.insert(chars, char) end
			end
		end
	end
	return playersInRange, chars
end

local function getTouchPart(tool)
	local tt = tool and tool:FindFirstChildWhichIsA("TouchTransmitter", true)
	return tt and tt.Parent
end

local function autoEquip(tool)
	if not tool:IsDescendantOf(workspace) then
		tool.Parent = getChar(LocalPlayer)
	end
	tool:Activate()
end

task.spawn(function()
	while true do
		local myChar = getChar(LocalPlayer)
		if not myChar then task.wait(1) continue end

		local targets, enemyChars = getValidTargets()
		auraParams.FilterDescendantsInstances = enemyChars

		for _, tool in ipairs(myChar:GetChildren()) do
			if tool:IsA("Tool") then
				local fightEvent = tool:FindFirstChild("FightEvent")
				local touchPart = getTouchPart(tool)

				if toolSpammerActive then
					-- Only spam if toggle ON
					if fightEvent then
						autoEquip(tool)
						fightEvent:FireServer()
						table.insert(getgenv().TDW_HIT_TIMESTAMPS, tick())
					end
				end

				if touchPart then
					local partsInBox = workspace:GetPartBoundsInBox(
						touchPart.CFrame,
						touchPart.Size + auraSize,
						auraParams
				 )
					for _, part in ipairs(partsInBox) do
						local model = part:FindFirstAncestorWhichIsA("Model")
						if model and table.find(enemyChars, model) then
							firetouchinterest(touchPart, part, 1)
							firetouchinterest(touchPart, part, 0)
						end
					end
				end
			end
		end

		task.wait(0.005)
	end
end)

-- === USE TOOLS TOGGLE BUTTON ===
local toggleButton = Instance.new("TextButton")
toggleButton.Name = "ToolSpammerToggle"
toggleButton.Parent = screenGui
toggleButton.Position = UDim2.new(0.5, -40, 0.85, -20)
toggleButton.Size = UDim2.new(0, 80, 0, 40)
toggleButton.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
toggleButton.Font = Enum.Font.FredokaOne
toggleButton.Text = "OFF"
toggleButton.TextColor3 = Color3.fromRGB(0, 255, 0)
toggleButton.TextSize = 22
toggleButton.AutoButtonColor = false
toggleButton.BorderSizePixel = 0

local stroke = Instance.new("UIStroke", toggleButton)
stroke.Thickness = 3
stroke.Color = Color3.fromRGB(120, 40, 200)

local glow = Instance.new("UIGradient", toggleButton)
glow.Rotation = 45
local pulseTweenInfo = TweenInfo.new(2, Enum.EasingStyle.Sine, Enum.EasingDirection.InOut, -1, true)
glow.Color = ColorSequence.new({
	ColorSequenceKeypoint.new(0, Color3.fromRGB(120, 40, 200)),
	ColorSequenceKeypoint.new(0.5, Color3.fromRGB(180, 100, 255)),
	ColorSequenceKeypoint.new(1, Color3.fromRGB(120, 40, 200)),
})
TweenService:Create(glow, pulseTweenInfo, {Offset = Vector2.new(0.3, 0)}):Play()

local toolSpammerActive = false
toggleButton.MouseButton1Click:Connect(function()
	toolSpammerActive = not toolSpammerActive
	toggleButton.Text = toolSpammerActive and "ON" or "OFF"
	toggleButton.TextColor3 = toolSpammerActive and Color3.fromRGB(255, 60, 60) or Color3.fromRGB(0, 255, 0)
end)

RunService.PostSimulation:Connect(function()
	if toolSpammerActive and LocalPlayer.Character then
		for _, tool in ipairs(LocalPlayer.Backpack:GetChildren()) do
			if tool:IsA("Tool") then tool.Parent = LocalPlayer.Character end
		end
		for _, tool in ipairs(LocalPlayer.Character:GetChildren()) do
			if tool:IsA("Tool") then
				tool:Activate()
				table.insert(getgenv().TDW_HIT_TIMESTAMPS, tick())
			end
		end
	end
end)

LocalPlayer.CharacterAdded:Connect(function()
	task.wait(0.05)
	if toolSpammerActive then
		for _, tool in ipairs(LocalPlayer.Backpack:GetChildren()) do
			if tool:IsA("Tool") then tool.Parent = LocalPlayer.Character end
		end
	end
end)

-- === LOOPBRING V4 (Circle Mode) ===
local bringTargets = {}
local circleRadius = 5  -- Distance from player
local circleSpeed = 0.1 -- Teleport speed

-- === UI ===
local bringUI = Instance.new("ScreenGui")
bringUI.Name = "LoopBringCircleUI"
bringUI.Parent = game.CoreGui
bringUI.ResetOnSpawn = false
bringUI.ZIndexBehavior = Enum.ZIndexBehavior.Sibling

-- Toggle button (top right)
local toggle = Instance.new("TextButton")
toggle.Size = UDim2.new(0, 35, 0, 35)
toggle.Position = UDim2.new(1, -45, 0, 10)
toggle.AnchorPoint = Vector2.new(0.5, 0)
toggle.Text = "â‰¡"
toggle.Font = Enum.Font.GothamBold
toggle.TextScaled = true
toggle.TextColor3 = Color3.new(1, 1, 1)
toggle.BackgroundColor3 = Color3.fromRGB(40, 0, 40)
toggle.Parent = bringUI

local grad = Instance.new("UIGradient", toggle)
grad.Color = ColorSequence.new{
	ColorSequenceKeypoint.new(0, Color3.fromRGB(180, 0, 180)),
	ColorSequenceKeypoint.new(1, Color3.fromRGB(60, 0, 60))
}
grad.Rotation = 45

-- Dropdown frame
local frame = Instance.new("Frame")
frame.Size = UDim2.new(0, 200, 0, 250)
frame.Position = UDim2.new(1, -220, 0, 50)
frame.BackgroundColor3 = Color3.fromRGB(20, 0, 20)
frame.Visible = false
frame.Parent = bringUI

Instance.new("UICorner", frame).CornerRadius = UDim.new(0, 10)
Instance.new("UIStroke", frame).Color = Color3.fromRGB(150, 0, 150)

local scroll = Instance.new("ScrollingFrame")
scroll.Size = UDim2.new(1, -10, 1, -10)
scroll.Position = UDim2.new(0, 5, 0, 5)
scroll.CanvasSize = UDim2.new(0, 0, 0, 0)
scroll.ScrollBarThickness = 5
scroll.BackgroundTransparency = 1
scroll.Parent = frame

local layout = Instance.new("UIListLayout", scroll)
layout.Padding = UDim.new(0, 2)

toggle.MouseButton1Click:Connect(function()
	frame.Visible = not frame.Visible
	if frame.Visible then updatePlayerList() end
end)

-- Live update players
local function loopBring(name)
	if table.find(bringTargets, name) then return end
	table.insert(bringTargets, name)
end

local function stopBring(name)
	local i = table.find(bringTargets, name)
	if i then table.remove(bringTargets, i) end
end

function updatePlayerList()
	for _, btn in ipairs(scroll:GetChildren()) do
		if btn:IsA("TextButton") then btn:Destroy() end
	end
	for _, p in ipairs(Players:GetPlayers()) do
		if p ~= LocalPlayer then
			local b = Instance.new("TextButton")
			b.Size = UDim2.new(1, -8, 0, 28)
			b.Text = p.Name
			b.TextScaled = true
			b.Font = Enum.Font.Gotham
			b.BackgroundColor3 = table.find(bringTargets, p.Name) and Color3.fromRGB(120, 0, 120) or Color3.fromRGB(40, 0, 40)
			b.TextColor3 = Color3.new(1, 1, 1)
			b.Parent = scroll

			Instance.new("UICorner", b).CornerRadius = UDim.new(0, 6)

			b.MouseButton1Click:Connect(function()
				if table.find(bringTargets, p.Name) then
					stopBring(p.Name)
				else
					loopBring(p.Name)
				end
				updatePlayerList()
			end)
		end
	end
	scroll.CanvasSize = UDim2.new(0, 0, 0, #Players:GetPlayers() * 30)
end

Players.PlayerAdded:Connect(updatePlayerList)
Players.PlayerRemoving:Connect(function(p)
	stopBring(p.Name)
	updatePlayerList()
end)

-- === Circle Loop ===
task.spawn(function()
	while task.wait(circleSpeed) do
		local root = LocalPlayer.Character and LocalPlayer.Character:FindFirstChild("HumanoidRootPart")
		if root and #bringTargets > 0 then
			for i, name in ipairs(bringTargets) do
				local plr = Players:FindFirstChild(name)
				local tChar = plr and plr.Character
				local tRoot = tChar and tChar:FindFirstChild("HumanoidRootPart")
				if tRoot then
					local angle = math.rad((i / #bringTargets) * 360)
					local offset = Vector3.new(math.cos(angle) * circleRadius, 0, math.sin(angle) * circleRadius)
					tRoot.CFrame = CFrame.new(root.Position + offset)
				end
			end
		end
	end
end)
