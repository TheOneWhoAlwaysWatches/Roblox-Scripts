-- CONFIG
local auraRange = 20 -- Max distance to enemy
local auraSize = Vector3.new(30, 30, 30) -- Aura box around tool
local attackRate = 0.005 -- Max speed loop
local zapOffset = Vector3.new(0, -1, 0) -- Slightly below target to reduce knockback

-- SERVICES
local Players = game:GetService("Players")
local LocalPlayer = Players.LocalPlayer

-- STATE
local running = true
local auraParams = OverlapParams.new()
auraParams.FilterType = Enum.RaycastFilterType.Include

-- HELPERS
local function getChar(plr)
	return plr and plr.Character
end

local function getHRP(plr)
	local char = getChar(plr)
	return char and char:FindFirstChild("HumanoidRootPart")
end

local function getValidTargets()
	local myHRP = getHRP(LocalPlayer)
	if not myHRP then return {}, {} end

	local playersInRange = {}
	local chars = {}

	for _, player in ipairs(Players:GetPlayers()) do
		if player ~= LocalPlayer then
			local hrp = getHRP(player)
			if hrp and (hrp.Position - myHRP.Position).Magnitude <= auraRange then
				table.insert(playersInRange, player)
				local char = getChar(player)
				if char then table.insert(chars, char) end
			end
		end
	end

	return playersInRange, chars
end

local function getTouchPart(tool)
	local touchTransmitter = tool and tool:FindFirstChildWhichIsA("TouchTransmitter", true)
	return touchTransmitter and touchTransmitter.Parent
end

local function autoEquip(tool)
	if not tool:IsDescendantOf(workspace) then
		tool.Parent = getChar(LocalPlayer)
	end
	tool:Activate()
end

-- MAIN LOOP
task.spawn(function()
	while running do
		local myChar = getChar(LocalPlayer)
		if not myChar then task.wait(1) continue end

		local targets, enemyChars = getValidTargets()
		auraParams.FilterDescendantsInstances = enemyChars

		for _, tool in ipairs(myChar:GetChildren()) do
			if tool:IsA("Tool") then
				local fightEvent = tool:FindFirstChild("FightEvent")
				local touchPart = getTouchPart(tool)
				if not touchPart or not fightEvent then continue end

				autoEquip(tool)
				fightEvent:FireServer()
				task.wait(0.001) -- minimal delay for reliability
				fightEvent:FireServer()

				local hitPartsThisLoop = {}

				local partsInBox = workspace:GetPartBoundsInBox(
					touchPart.CFrame,
					touchPart.Size + auraSize,
					auraParams
				)

				for _, part in ipairs(partsInBox) do
					if hitPartsThisLoop[part] then continue end

					-- Block self-hit + prevent zap if part is your own
					if part:IsDescendantOf(myChar) then continue end

					local model = part:FindFirstAncestorWhichIsA("Model")
					if model and table.find(enemyChars, model) then
						-- SAFE zap: only move touchPart if this part is NOT yours
						local zapPos = part.CFrame * CFrame.new(zapOffset)
						touchPart.CFrame = zapPos

						firetouchinterest(touchPart, part, 1)
						firetouchinterest(touchPart, part, 0)

						hitPartsThisLoop[part] = true
					end
				end
			end
		end

		task.wait(attackRate)
	end
end)

-- RESET ON DEATH
LocalPlayer.CharacterAdded:Connect(function()
	task.wait(1)
	running = true
end)

print("ðŸ”¥ Ultra Speed Aura with Safe Hitbox Zapper Activated!")
