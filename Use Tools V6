-- ⚔️ TDW Use Tools V6 - Fast & Stable Equipping, Purple Themed UI + Glow

local player = game.Players.LocalPlayer
local RunService = game:GetService("RunService")
local UserInputService = game:GetService("UserInputService")

-- Shared hit timestamps for power meter
getgenv().TDW_HIT_TIMESTAMPS = {}

-- UI Setup
local screenGui = Instance.new("ScreenGui")
screenGui.Name = "DemonicToolGui"
screenGui.Parent = game.CoreGui
screenGui.ResetOnSpawn = false

local toolButton = Instance.new("TextButton")
toolButton.Name = "AttackToggle"
toolButton.Parent = screenGui
toolButton.Position = UDim2.new(0.5, -40, 0.85, -20)
toolButton.Size = UDim2.new(0, 80, 0, 40)
toolButton.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
toolButton.Font = Enum.Font.FredokaOne
toolButton.Text = "OFF"
toolButton.TextColor3 = Color3.fromRGB(180, 100, 255) -- purple text
toolButton.TextSize = 22
toolButton.AutoButtonColor = false
toolButton.BorderSizePixel = 0

local stroke = Instance.new("UIStroke", toolButton)
stroke.Thickness = 3
stroke.Color = Color3.fromRGB(120, 40, 200) -- purple border
stroke.ApplyStrokeMode = Enum.ApplyStrokeMode.Border

local padding = Instance.new("UIPadding", toolButton)
padding.PaddingTop = UDim.new(0, 5)
padding.PaddingBottom = UDim.new(0, 5)
padding.PaddingLeft = UDim.new(0, 6)
padding.PaddingRight = UDim.new(0, 6)

-- Glow Effect using UIGradient pulsing
local glow = Instance.new("UIGradient", toolButton)
glow.Rotation = 45
local pulseTweenInfo = TweenInfo.new(2, Enum.EasingStyle.Sine, Enum.EasingDirection.InOut, -1, true)
local TweenService = game:GetService("TweenService")

glow.Color = ColorSequence.new({
	ColorSequenceKeypoint.new(0, Color3.fromRGB(120, 40, 200)),
	ColorSequenceKeypoint.new(0.5, Color3.fromRGB(180, 100, 255)),
	ColorSequenceKeypoint.new(1, Color3.fromRGB(120, 40, 200)),
})

local pulseTween = TweenService:Create(glow, pulseTweenInfo, {Offset = Vector2.new(0.3, 0)})
pulseTween:Play()

-- Core Variables
local attacking = false
local activeTools = {}
local attackSessionId = 0

-- Fast equip with retry
local function equipAllTools()
	local character = player.Character
	if not character then return end
	for _, tool in ipairs(player.Backpack:GetChildren()) do
		if tool:IsA("Tool") then
			tool.Parent = character
			task.delay(0.05, function()
				if tool.Parent ~= character then
					tool.Parent = character
				end
			end)
		end
	end
end

-- Per-tool activator, runs a coroutine to spam tool activation while attacking
local function activateTool(tool)
	if activeTools[tool] then return end
	activeTools[tool] = true
	local session = attackSessionId

	task.spawn(function()
		while attacking and tool.Parent == player.Character and session == attackSessionId do
			pcall(function()
				tool:Activate()
				tool:Activate() -- double activate for power
				table.insert(getgenv().TDW_HIT_TIMESTAMPS, tick()) -- Power meter hit timestamp
			end)
			RunService.PostSimulation:Wait()
		end
		activeTools[tool] = nil
	end)

	tool.AncestryChanged:Connect(function(_, parent)
		if not attacking or parent ~= player.Character then
			activeTools[tool] = nil
		end
	end)
end

-- Toggle Attack State
local function toggleAttack()
	attacking = not attacking
	attackSessionId += 1
	toolButton.Text = attacking and "ON" or "OFF"
	toolButton.TextColor3 = attacking and Color3.fromRGB(180, 100, 255) or Color3.fromRGB(120, 120, 120)

	if not attacking then
		for _, tool in ipairs(player.Character:GetChildren()) do
			if tool:IsA("Tool") then
				tool.Parent = player.Backpack
			end
		end
		activeTools = {}
	else
		equipAllTools()
		for _, tool in ipairs(player.Character:GetChildren()) do
			if tool:IsA("Tool") then
				activateTool(tool)
			end
		end
	end
end

-- Connections
toolButton.MouseButton1Click:Connect(toggleAttack)

UserInputService.InputBegan:Connect(function(input, gp)
	if not gp and input.KeyCode == Enum.KeyCode.F then
		toggleAttack()
	end
end)

-- Equip and activate newly added tools quickly
player.Backpack.ChildAdded:Connect(function(child)
	if child:IsA("Tool") and attacking then
		child.Parent = player.Character
		task.delay(0.05, function()
			if child.Parent ~= player.Character then
				child.Parent = player.Character
			end
		end)
		activateTool(child)
	end
end)

-- On respawn, re-equip and re-activate tools
player.CharacterAdded:Connect(function()
	task.wait(1)
	if attacking then
		equipAllTools()
		for _, tool in ipairs(player.Character:GetChildren()) do
			if tool:IsA("Tool") then
				activateTool(tool)
			end
		end
	end
end)
