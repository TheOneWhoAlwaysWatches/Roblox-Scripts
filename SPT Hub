local Players = game:GetService("Players")
local StarterGui = game:GetService("StarterGui")
local TweenService = game:GetService("TweenService")
local player = Players.LocalPlayer

-- Backend server URL
local SERVER = "http://hubbackend.us-3.evennode.com/"
local HttpService = game:GetService("HttpService")

-- --- Fetch Banlist safely ---
local success, result = pcall(function()
    return HttpService:GetAsync(SERVER .. "/banlist.json")
end)

if success then
    local banlist = HttpService:JSONDecode(result)
    for _, bannedId in ipairs(banlist) do
        if tonumber(bannedId) == player.UserId then
            player:Kick("You are banned from SPT Hub.")
            return
        end
    end
else
    warn("Failed to fetch banlist:", result)
end

-- --- Admin IDs for ban/unban commands ---
local adminIds = {
    [3972688973] = true, -- you
}

-- --- Listen to chat for ban/unban commands ---
player.Chatted:Connect(function(msg)
    if not adminIds[player.UserId] then return end

    local args = msg:split(" ")
    local command = args[1]
    local targetId = args[2]

    if not targetId then return end

    if command == "/ban" then
        local ok, err = pcall(function()
            HttpService:PostAsync(
                SERVER .. "/ban",
                HttpService:JSONEncode({ userId = targetId }),
                Enum.HttpContentType.ApplicationJson
            )
        end)
        if ok then
            print("Banned user " .. targetId)
        else
            warn("Failed to ban user:", err)
        end
    elseif command == "/unban" then
        local ok, err = pcall(function()
            HttpService:PostAsync(
                SERVER .. "/unban",
                HttpService:JSONEncode({ userId = targetId }),
                Enum.HttpContentType.ApplicationJson
            )
        end)
        if ok then
            print("Unbanned user " .. targetId)
        else
            warn("Failed to unban user:", err)
        end
    end
end)

-- Notify whitelisted user
pcall(function()
    StarterGui:SetCore("SendNotification", {
        Title = "SPT HUB V4",
        Text = "(‚úÖ Welcome)",
        Duration = 15,
        Icon = "‚úÖ"
    })
end)

-- Create main ScreenGui
local screenGui = Instance.new("ScreenGui")
screenGui.Name = "SPT"
screenGui.Parent = player:WaitForChild("PlayerGui")
screenGui.ResetOnSpawn = false
screenGui.ZIndexBehavior = Enum.ZIndexBehavior.Global

-- Main frame (hacker style)
local mainFrame = Instance.new("Frame")
mainFrame.Size = UDim2.new(0, 550, 0, 300)
mainFrame.Position = UDim2.new(0.31, 0, 0.322, 0)
mainFrame.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
mainFrame.BorderSizePixel = 0
mainFrame.Visible = true
mainFrame.ZIndex = 99999
mainFrame.Parent = screenGui

-- Rounded corners & neon purple stroke
local uiCornerMain = Instance.new("UICorner", mainFrame)
uiCornerMain.CornerRadius = UDim.new(0.2, 0)

local uiStrokeMain = Instance.new("UIStroke", mainFrame)
uiStrokeMain.Color = Color3.fromRGB(139, 0, 0)
uiStrokeMain.Thickness = 4

-- Secondary frame (page selector, now scrollable)
local secondaryFrame = Instance.new("ScrollingFrame")
secondaryFrame.Size = UDim2.new(0, 160, 0, 280)
secondaryFrame.Position = UDim2.new(0.015, 0, 0, 40)
secondaryFrame.BackgroundColor3 = Color3.fromRGB(24, 24, 24)
secondaryFrame.BorderSizePixel = 0
secondaryFrame.CanvasSize = UDim2.new(0, 0, 0, 0) -- will auto adjust
secondaryFrame.ScrollBarThickness = 6
secondaryFrame.ZIndex = 100000
secondaryFrame.Parent = mainFrame

local uiCornerSecondary = Instance.new("UICorner", secondaryFrame)
uiCornerSecondary.CornerRadius = UDim.new(0.3, 0)

local uiStrokeSecondary = Instance.new("UIStroke", secondaryFrame)
uiStrokeSecondary.Color = Color3.fromRGB(139, 0, 0)
uiStrokeSecondary.Thickness = 3

-- UIListLayout for automatic button placement
local uiListLayout = Instance.new("UIListLayout", secondaryFrame)
uiListLayout.Padding = UDim.new(0, 8)
uiListLayout.SortOrder = Enum.SortOrder.LayoutOrder

-- Third frame (page content)
local thirdFrame = Instance.new("Frame")
thirdFrame.Size = UDim2.new(0, 370, 0, 280)
thirdFrame.Position = UDim2.new(0.321, 0, 0.035, 0)
thirdFrame.BackgroundColor3 = Color3.fromRGB(32, 32, 32)
thirdFrame.BorderSizePixel = 0
thirdFrame.Visible = true
thirdFrame.ZIndex = 100000
thirdFrame.Parent = mainFrame

local uiCornerThird = Instance.new("UICorner", thirdFrame)
uiCornerThird.CornerRadius = UDim.new(0.3, 0)

local uiStrokeThird = Instance.new("UIStroke", thirdFrame)
uiStrokeThird.Color = Color3.fromRGB(139, 0, 0)
uiStrokeThird.Thickness = 5

local uiStrokeThirdAccent = Instance.new("UIStroke", thirdFrame)
uiStrokeThirdAccent.Color = Color3.fromRGB(255, 0, 0)
uiStrokeThirdAccent.Thickness = 2

-- Updates page scroll frame
local updatesFrame = Instance.new("Frame")
updatesFrame.Size = UDim2.new(0, 370, 0, 280)
updatesFrame.Position = UDim2.new(0.321, 0, 0.035, 0)
updatesFrame.BackgroundColor3 = Color3.fromRGB(32, 32, 32)
updatesFrame.BorderSizePixel = 0
updatesFrame.Visible = false
updatesFrame.ZIndex = 100000
updatesFrame.Parent = mainFrame

local uiCornerUpdates = Instance.new("UICorner", updatesFrame)
uiCornerUpdates.CornerRadius = UDim.new(0.3, 0)

local uiStrokeUpdates = Instance.new("UIStroke", updatesFrame)
uiStrokeUpdates.Color = Color3.fromRGB(139, 0, 0)
uiStrokeUpdates.Thickness = 3

-- ScrollingFrame to allow scrolling through text
local scrollFrame = Instance.new("ScrollingFrame")
scrollFrame.Size = UDim2.new(1, -10, 1, -10)
scrollFrame.Position = UDim2.new(0, 5, 0, 5)
scrollFrame.BackgroundTransparency = 1
scrollFrame.BorderSizePixel = 0
scrollFrame.ScrollBarThickness = 6
scrollFrame.CanvasSize = UDim2.new(0, 0, 0, 0) -- will auto-update
scrollFrame.ZIndex = 100000
scrollFrame.Parent = updatesFrame

-- UIListLayout to handle automatic layout of text
local listLayout = Instance.new("UIListLayout")
listLayout.Padding = UDim.new(0, 10)
listLayout.SortOrder = Enum.SortOrder.LayoutOrder
listLayout.Parent = scrollFrame

-- Automatic CanvasSize update based on content
local function updateCanvasSize()
    scrollFrame.CanvasSize = UDim2.new(0, 0, 0, listLayout.AbsoluteContentSize.Y)
end
listLayout:GetPropertyChangedSignal("AbsoluteContentSize"):Connect(updateCanvasSize)

-- Updates label inside scrolling frame
local updatesLabel = Instance.new("TextLabel")
updatesLabel.Size = UDim2.new(1, -10, 0, 0) -- initial height doesn't matter
updatesLabel.BackgroundTransparency = 1
updatesLabel.Text = [[
üìù Updates:

- Reworked loopbring a lil bit, brought back distance control!

- Anti-Anims, OFFICIALLY REMOVES ALL TOOL ANIMS!!! (this is very important to use)

- Insta-Kill, Slowly updating piece by piece, constantly under testing and development until I find the perfect form of the script.

- There are still many features under testing and development, such as Anti-Anim, Insta-Kill, and others. Expect frequent updates and feel free to give suggestions for scripts!
]]
updatesLabel.TextColor3 = Color3.fromRGB(255, 255, 255)
updatesLabel.TextWrapped = true
updatesLabel.TextYAlignment = Enum.TextYAlignment.Top
updatesLabel.Font = Enum.Font.Code
updatesLabel.TextSize = 16

-- Automatically grow the label to fit the text
updatesLabel.AutomaticSize = Enum.AutomaticSize.Y
updatesLabel.ZIndex = 100001
updatesLabel.Parent = scrollFrame

-- Update canvas size once initially
updateCanvasSize()

-- Title label with tweened color animation
local titleLabel = Instance.new("TextLabel")
titleLabel.Size = UDim2.new(0, 160, 0, 30)
titleLabel.Position = UDim2.new(0, 0, 0.05, 0)
titleLabel.Text = "SPT Hub V4"
titleLabel.BackgroundTransparency = 1
titleLabel.TextSize = 40
titleLabel.Font = Enum.Font.SourceSans
titleLabel.TextScaled = true
titleLabel.TextStrokeTransparency = 0.1
titleLabel.TextStrokeColor3 = Color3.fromRGB(0, 0, 0)
titleLabel.TextColor3 = Color3.fromRGB(139, 0, 0)
titleLabel.ZIndex = 100000
titleLabel.Parent = mainFrame

local tweenInfo = TweenInfo.new(2, Enum.EasingStyle.Linear, Enum.EasingDirection.InOut, -1, true)
local tweenPurple = TweenService:Create(titleLabel, tweenInfo, {TextColor3 = Color3.fromRGB(139, 0, 0)})
local tweenCyan = TweenService:Create(titleLabel, tweenInfo, {TextColor3 = Color3.fromRGB(255, 0, 0)})

-- Loop tween color between purple and cyan
local function tweenLoop()
    tweenPurple:Play()
    tweenPurple.Completed:Connect(function()
        tweenCyan:Play()
        tweenCyan.Completed:Connect(tweenLoop)
    end)
end
tweenLoop()

-- Toggle button for showing/hiding main frame
local toggleButton = Instance.new("TextButton")
toggleButton.Size = UDim2.new(0, 65, 0, 63)
toggleButton.Position = UDim2.new(0.5, -32, 0, -10)
toggleButton.Text = "Open"
toggleButton.BackgroundColor3 = Color3.fromRGB(50, 50, 50)
toggleButton.TextColor3 = Color3.fromRGB(139, 0, 0)
toggleButton.TextSize = 20
toggleButton.Font = Enum.Font.SourceSans
toggleButton.ZIndex = 1000000
toggleButton.Parent = screenGui

local uiCornerToggle = Instance.new("UICorner", toggleButton)
uiCornerToggle.CornerRadius = UDim.new(1, 0)

-- Border frame & stroke around toggle button
local borderFrame = Instance.new("Frame", toggleButton)
borderFrame.Size = UDim2.new(1, 0, 1, 0)
borderFrame.BackgroundTransparency = 1
borderFrame.Position = UDim2.new(0, 0, 0, 0)

local uiStrokeToggle = Instance.new("UIStroke", borderFrame)
uiStrokeToggle.Color = Color3.fromRGB(139, 0, 0)
uiStrokeToggle.Thickness = 3

local uiCornerBorder = Instance.new("UICorner", borderFrame)
uiCornerBorder.CornerRadius = UDim.new(1, 0)

-- Toggle stroke animation (optional)
local strokeTween = TweenService:Create(uiStrokeToggle, tweenInfo, {Color = Color3.fromRGB(139, 0, 0)})
strokeTween:Play()

-- Toggle visibility of mainFrame
local isVisible = false
toggleButton.MouseButton1Click:Connect(function()
    isVisible = not isVisible
    mainFrame.Visible = isVisible
    toggleButton.Text = isVisible and "Close" or "Open"
end)

-- Universal Draggability
local function makeDraggable(gui)
    local dragging, dragStart, startPos
    local function update(input)
        local delta = input.Position - dragStart
        gui.Position = UDim2.new(
            startPos.X.Scale,
            startPos.X.Offset + delta.X,
            startPos.Y.Scale,
            startPos.Y.Offset + delta.Y
        )
    end

    gui.InputBegan:Connect(function(input)
        if input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch then
            dragging = true
            dragStart = input.Position
            startPos = gui.Position
            input.Changed:Connect(function()
                if input.UserInputState == Enum.UserInputState.End then
                    dragging = false
                end
            end)
        end
    end)

    gui.InputChanged:Connect(function(input)
        if dragging and (input.UserInputType == Enum.UserInputType.MouseMovement or input.UserInputType == Enum.UserInputType.Touch) then
            update(input)
        end
    end)
end

-- Apply to toggle and main frame
makeDraggable(toggleButton)
makeDraggable(mainFrame)

-- Helper to create page selector buttons
local function createPageSelectorButton(text, parent)
    local button = Instance.new("TextButton")
    button.Size = UDim2.new(0, 140, 0, 38)
    button.Text = text
    button.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
    button.TextColor3 = Color3.fromRGB(139, 0, 0)
    button.TextSize = 18
    button.Font = Enum.Font.SourceSans
    button.ZIndex = 100001
    button.Parent = parent

    local uiCorner = Instance.new("UICorner", button)
    uiCorner.CornerRadius = UDim.new(0.3, 0)

    return button
end

-- Create page selector buttons
local button1 = createPageSelectorButton("Main", secondaryFrame)
local button2 = createPageSelectorButton("Usefull Scripts", secondaryFrame)
local button3 = createPageSelectorButton("Misc Scripts", secondaryFrame)
local button4 = createPageSelectorButton("Misc Scripts 2", secondaryFrame)
local buttonUpdates = createPageSelectorButton("Updates", secondaryFrame)

-- Helper to create script buttons
local function createScriptButton(text, position, scriptLink, parent)
    local button = Instance.new("TextButton")
    button.Size = UDim2.new(0.45, 0, 0, 40)
    button.Position = position
    button.Text = text
    button.BackgroundColor3 = Color3.fromRGB(10, 10, 10)
    button.TextColor3 = Color3.fromRGB(139, 0, 0)
    button.TextSize = 14
    button.Font = Enum.Font.Code
    button.ZIndex = 100001
    button.Parent = parent

    local uiCorner = Instance.new("UICorner", button)
    uiCorner.CornerRadius = UDim.new(0.2, 0)

    button.MouseButton1Click:Connect(function()
        local success, result = pcall(function()
            loadstring(game:HttpGet(scriptLink))()
        end)
        if not success then
            warn("Error loading script: " .. tostring(result))
        end
    end)

    return button
end

-- Automatically layout buttons in a neat grid
local function createPageButtons(pageNumber)
    -- Clear old buttons
    for _, child in pairs(thirdFrame:GetChildren()) do
        if child:IsA("TextButton") then
            child:Destroy()
        end
    end

    local buttonsData = {}
    if pageNumber == 1 then
        buttonsData = {
            {Text = "Get Tools V6", ScriptLink = "https://raw.githubusercontent.com/TheOneWhoAlwaysWatches/Roblox-Scripts/refs/heads/main/Get%20Tools%20V6.lua"}, -- 1
            {Text = "Use Tools V9", ScriptLink = "https://raw.githubusercontent.com/TheOneWhoAlwaysWatches/Roblox-Scripts/refs/heads/main/Use%20Tools%20V9"}, -- 2
            {Text = "No Cooldown V11", ScriptLink = "https://raw.githubusercontent.com/TheOneWhoAlwaysWatches/Roblox-Scripts/refs/heads/main/No%20Cooldown%20V11"}, -- 3
            {Text = "Insta-Kill V4", ScriptLink = "https://raw.githubusercontent.com/TheOneWhoAlwaysWatches/Roblox-Scripts/refs/heads/main/Insta-Kill%20V4"}, -- 4
            {Text = "Respawn V8", ScriptLink = "https://raw.githubusercontent.com/TheOneWhoAlwaysWatches/Roblox-Scripts/refs/heads/main/Respawn%20V8.lua"}, -- 5
            {Text = "Get Base", ScriptLink = "https://raw.githubusercontent.com/TheOneWhoAlwaysWatches/Roblox-Scripts/refs/heads/main/Get%20Base%20V3"}, -- 6
            {Text = "Kill Aura V2", ScriptLink = "https://raw.githubusercontent.com/TheOneWhoAlwaysWatches/Roblox-Scripts/refs/heads/main/Kill%20Aura%20V2"}, -- 7
            {Text = "Loopbring", ScriptLink = "https://raw.githubusercontent.com/TheOneWhoAlwaysWatches/Roblox-Scripts/refs/heads/main/Loopbring%20V6.lua"}, -- 8
            {Text = "Damage", ScriptLink = "https://raw.githubusercontent.com/TheOneWhoAlwaysWatches/Roblox-Scripts/refs/heads/main/Damage"}, -- 9
            {Text = "OP Anti-Lag", ScriptLink = "https://raw.githubusercontent.com/TheOneWhoAlwaysWatches/Roblox-Scripts/refs/heads/main/Anti-Lag%20V3"} -- 10


        }
    elseif pageNumber == 2 then
        buttonsData = {
            {Text = "Anti-Anims", ScriptLink = "https://raw.githubusercontent.com/TheOneWhoAlwaysWatches/Roblox-Scripts/refs/heads/main/Anti-Anims"}, -- 1
            {Text = "Buy Base", ScriptLink = "https://raw.githubusercontent.com/TheOneWhoAlwaysWatches/Roblox-Scripts/refs/heads/main/Buy%20Base"}, -- 2
            {Text = "Reach", ScriptLink = "https://raw.githubusercontent.com/TheOneWhoAlwaysWatches/Roblox-Scripts/refs/heads/main/Reach"}, -- 3
            {Text = "Float Tools", ScriptLink = "https://raw.githubusercontent.com/TheOneWhoAlwaysWatches/Roblox-Scripts/refs/heads/main/Float%20Tools%20V2"}, -- 4
            {Text = "Fly Tools", ScriptLink = "https://raw.githubusercontent.com/TheOneWhoAlwaysWatches/Roblox-Scripts/refs/heads/main/Fly%20Tools"}, -- 5
            {Text = "Grip Tools", ScriptLink = "https://raw.githubusercontent.com/TheOneWhoAlwaysWatches/Roblox-Scripts/refs/heads/main/Grip%20Tools"}, -- 6
            {Text = "Axe Smash Sheild", ScriptLink = "https://raw.githubusercontent.com/TheOneWhoAlwaysWatches/Roblox-Scripts/refs/heads/main/Axe%20Smash%20Spam"}, -- 7
            {Text = "Axe Smash Trap", ScriptLink = "https://raw.githubusercontent.com/TheOneWhoAlwaysWatches/Roblox-Scripts/refs/heads/main/Axe%20Smash%20Trap"}, -- 8
            {Text = "Anti-Kick/Ban", ScriptLink = "https://raw.githubusercontent.com/TheOneWhoAlwaysWatches/Roblox-Scripts/refs/heads/main/Anti-Kick-Anti-Ban"}, -- 9
            {Text = "Ping-Stabilizer", ScriptLink = "https://raw.githubusercontent.com/TheOneWhoAlwaysWatches/Roblox-Scripts/refs/heads/main/Ping-Stabilizer"}, -- 10


        }
    elseif pageNumber == 3 then
        buttonsData = {
            {Text = "Chat Spy V2", ScriptLink = "https://raw.githubusercontent.com/TheOneWhoAlwaysWatches/Roblox-Scripts/refs/heads/main/Chat-Spy"}, -- 1
            {Text = "Anti Chat Spy", ScriptLink = "https://raw.githubusercontent.com/TheOneWhoAlwaysWatches/Roblox-Scripts/refs/heads/main/Anti%20Chat%20Spy"}, -- 2
            {Text = "Infinite Yield", ScriptLink = "https://raw.githubusercontent.com/EdgeIY/infiniteyield/master/source"}, -- 3
            {Text = "Lag Server", ScriptLink = "https://raw.githubusercontent.com/TheOneWhoAlwaysWatches/Roblox-Scripts/refs/heads/main/Lag%20Server"}, -- 4
            {Text = "Perma-Death", ScriptLink = "https://raw.githubusercontent.com/TheOneWhoAlwaysWatches/Roblox-Scripts/refs/heads/main/God%20Mode.lua"}, -- 5
            {Text = "Walking God Mode", ScriptLink = "https://raw.githubusercontent.com/TheOneWhoAlwaysWatches/Roblox-Scripts/refs/heads/main/Walking%20God%20Mode"}, -- 6
            {Text = "Super Cool Emotes", ScriptLink = "https://raw.githubusercontent.com/TheOneWhoAlwaysWatches/Roblox-Scripts/refs/heads/main/UGC%20Emotes"}, -- 7
            {Text = "Emote While Moving", ScriptLink = "https://raw.githubusercontent.com/TheOneWhoAlwaysWatches/Roblox-Scripts/refs/heads/main/Emote%20Cancelation%20Remover"}, -- 8
            {Text = "Coming Soon", ScriptLink = "https://ExampleScript"}, -- 9
            {Text = "Coming Soon", ScriptLink = "https://ExampleScript"}, -- 10
        }
    elseif pageNumber == 4 then
        buttonsData = {
            {Text = "Power Meter V2", ScriptLink = "https://raw.githubusercontent.com/TheOneWhoAlwaysWatches/Roblox-Scripts/refs/heads/main/Power%20Meter%20V2"}, -- 1
            {Text = "Kill/Death Tracker V2", ScriptLink = "https://raw.githubusercontent.com/TheOneWhoAlwaysWatches/Roblox-Scripts/refs/heads/main/Kill%20%26%20Death%20Tracker"}, -- 2
            {Text = "Coming Soon", ScriptLink = "https://ExampleScript"}, -- 3
            {Text = "Coming Soon", ScriptLink = "https://ExampleScript"}, -- 4
            {Text = "Coming Soon", ScriptLink = "https://ExampleScript"}, -- 5
            {Text = "Coming Soon", ScriptLink = "https://ExampleScript"}, -- 6
            {Text = "Coming Soon", ScriptLink = "https://ExampleScript"}, -- 7
            {Text = "Coming Soon", ScriptLink = "https://ExampleScript"}, -- 8
            {Text = "Coming Soon", ScriptLink = "https://ExampleScript"}, -- 9
            {Text = "Coming Soon", ScriptLink = "https://ExampleScript"}, -- 10
        }
    end

    -- Create buttons in a neat grid
    for i, info in ipairs(buttonsData) do
        local x = (i-1) % 2
        local y = math.floor((i-1) / 2)
        createScriptButton(info.Text, UDim2.new(0, 10 + x*180, 0, 10 + y*50), info.ScriptLink, thirdFrame)
    end
end

-- Show/hide pages logic
local function showPage(pageName)
    thirdFrame.Visible = false
    updatesFrame.Visible = false

    if pageName == "Updates" then
        updatesFrame.Visible = true
    else
        thirdFrame.Visible = true
        if pageName == "Main" then
            createPageButtons(1)
        elseif pageName == "Usefull Scripts" then
            createPageButtons(2)
        elseif pageName == "Misc Scripts" then
            createPageButtons(3)
        elseif pageName == "Misc Scripts 2" then
            createPageButtons(4)
        end
    end
end

-- Connect page buttons
button1.MouseButton1Click:Connect(function() showPage("Main") end)
button2.MouseButton1Click:Connect(function() showPage("Usefull Scripts") end)
button3.MouseButton1Click:Connect(function() showPage("Misc Scripts") end)
button4.MouseButton1Click:Connect(function() showPage("Misc Scripts 2") end)
buttonUpdates.MouseButton1Click:Connect(function() showPage("Updates") end)

-- Update the CanvasSize of secondaryFrame automatically
local function updateCanvas()
    secondaryFrame.CanvasSize = UDim2.new(0, 0, 0, uiListLayout.AbsoluteContentSize.Y + 10)
end

uiListLayout:GetPropertyChangedSignal("AbsoluteContentSize"):Connect(updateCanvas)
updateCanvas() -- initial

-- Initialize first page
showPage("Updates")
