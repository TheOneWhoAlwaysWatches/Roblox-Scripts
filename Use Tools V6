-- ‚öîÔ∏è TDW Hyper Tool Spammer (Max Tick Speed)

local player = game.Players.LocalPlayer
local RunService = game:GetService("RunService")

-- Shared hit timestamps for power meter
getgenv().TDW_HIT_TIMESTAMPS = {}

-- UI Setup
local screenGui = Instance.new("ScreenGui")
screenGui.Name = "DemonicToolGui"
screenGui.Parent = game.CoreGui
screenGui.ResetOnSpawn = false

local toolButton = Instance.new("TextButton")
toolButton.Name = "AttackToggle"
toolButton.Parent = screenGui
toolButton.Position = UDim2.new(0.5, -40, 0.85, -20)
toolButton.Size = UDim2.new(0, 80, 0, 40)
toolButton.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
toolButton.Font = Enum.Font.FredokaOne
toolButton.Text = "OFF"
toolButton.TextColor3 = Color3.fromRGB(180, 100, 255) -- purple text
toolButton.TextSize = 22
toolButton.AutoButtonColor = false
toolButton.BorderSizePixel = 0

local stroke = Instance.new("UIStroke", toolButton)
stroke.Thickness = 3
stroke.Color = Color3.fromRGB(120, 40, 200) -- purple border
stroke.ApplyStrokeMode = Enum.ApplyStrokeMode.Border

local padding = Instance.new("UIPadding", toolButton)
padding.PaddingTop = UDim.new(0, 5)
padding.PaddingBottom = UDim.new(0, 5)
padding.PaddingLeft = UDim.new(0, 6)
padding.PaddingRight = UDim.new(0, 6)

-- Glow Effect using UIGradient pulsing
local glow = Instance.new("UIGradient", toolButton)
glow.Rotation = 45
local pulseTweenInfo = TweenInfo.new(2, Enum.EasingStyle.Sine, Enum.EasingDirection.InOut, -1, true)
local TweenService = game:GetService("TweenService")

glow.Color = ColorSequence.new({
	ColorSequenceKeypoint.new(0, Color3.fromRGB(120, 40, 200)),
	ColorSequenceKeypoint.new(0.5, Color3.fromRGB(180, 100, 255)),
	ColorSequenceKeypoint.new(1, Color3.fromRGB(120, 40, 200)),
})

local pulseTween = TweenService:Create(glow, pulseTweenInfo, {Offset = Vector2.new(0.3, 0)})
pulseTween:Play()

-- Logic
local attacking = false
local activeTools = {}

local function activateTool(tool)
	if activeTools[tool] then return end
	activeTools[tool] = true

	task.spawn(function()
		while attacking and tool.Parent == player.Character do
			pcall(function() 
				tool:Activate() 
				table.insert(getgenv().TDW_HIT_TIMESTAMPS, tick())
			end)
			RunService.PostSimulation:Wait()
		end
		activeTools[tool] = nil
	end)

	tool.AncestryChanged:Connect(function(_, parent)
		if not attacking or parent ~= player.Character then
			activeTools[tool] = nil
		end
	end)
end

local function equipAllTools()
	if not attacking or not player.Character then return end
	for _, tool in ipairs(player.Backpack:GetChildren()) do
		if tool:IsA("Tool") then
			tool.Parent = player.Character
		end
	end
	for _, tool in ipairs(player.Character:GetChildren()) do
		if tool:IsA("Tool") then
			activateTool(tool)
		end
	end
end

local function toggleAttack()
	attacking = not attacking
	toolButton.Text = attacking and "ON" or "OFF"
	toolButton.TextColor3 = attacking and Color3.fromRGB(255, 60, 60) or Color3.fromRGB(0, 255, 0)

	if not attacking then
		for _, tool in ipairs(player.Character:GetChildren()) do
			if tool:IsA("Tool") then
				tool.Parent = player.Backpack
			end
		end
		activeTools = {}
	else
		equipAllTools()
	end
end

toolButton.MouseButton1Click:Connect(toggleAttack)

-- Event Handlers
player.Backpack.ChildAdded:Connect(function(child)
	if child:IsA("Tool") and attacking then
		child.Parent = player.Character
	end
end)

player.CharacterAdded:Connect(function()
	task.wait(0.1)
	if attacking then
		equipAllTools()
	end
end)

-- üîÅ Ultra Fast Tick Equip/Use Handler
RunService.PostSimulation:Connect(function()
	if attacking then
		equipAllTools()
	end
end)
