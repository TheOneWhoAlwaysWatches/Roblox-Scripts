-- ⚔️ TDW Hyper Tool Spammer (Real-Time, Safe, and Overload-Aware)

local player = game.Players.LocalPlayer
local RunService = game:GetService("RunService")
local UserInputService = game:GetService("UserInputService")

-- UI Setup
local screenGui = Instance.new("ScreenGui")
screenGui.Name = "DemonicToolGui"
screenGui.Parent = game.CoreGui
screenGui.ResetOnSpawn = false

-- Toggle Button
local toolButton = Instance.new("TextButton")
toolButton.Name = "AttackToggle"
toolButton.Parent = screenGui
toolButton.Position = UDim2.new(0.5, -40, 0.85, -20)
toolButton.Size = UDim2.new(0, 80, 0, 40)
toolButton.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
toolButton.Font = Enum.Font.FredokaOne
toolButton.Text = "OFF"
toolButton.TextColor3 = Color3.fromRGB(0, 255, 0)
toolButton.TextSize = 22
toolButton.AutoButtonColor = false
toolButton.BorderSizePixel = 0

local stroke = Instance.new("UIStroke", toolButton)
stroke.Thickness = 3
stroke.Color = Color3.fromRGB(255, 0, 0)
stroke.ApplyStrokeMode = Enum.ApplyStrokeMode.Border

local padding = Instance.new("UIPadding", toolButton)
padding.PaddingTop = UDim.new(0, 5)
padding.PaddingBottom = UDim.new(0, 5)
padding.PaddingLeft = UDim.new(0, 6)
padding.PaddingRight = UDim.new(0, 6)

-- Power Meter Label
local powerLabel = Instance.new("TextLabel")
powerLabel.Name = "PowerMeter"
powerLabel.Parent = screenGui
powerLabel.Position = UDim2.new(0.5, -70, 0.85, 30)
powerLabel.Size = UDim2.new(0, 140, 0, 20)
powerLabel.BackgroundTransparency = 1
powerLabel.Font = Enum.Font.Code
powerLabel.TextColor3 = Color3.fromRGB(0, 255, 0)
powerLabel.TextSize = 18
powerLabel.Text = "Power: 0/s"

-- Core Variables
local attacking = false
local attackSessionId = 0
local MAX_HITS_PER_FRAME = 30
local hitTimestamps = {}

-- Equip Tools
local function equipAllTools()
	if not player.Character then return end
	for _, tool in ipairs(player.Backpack:GetChildren()) do
		if tool:IsA("Tool") then
			tool.Parent = player.Character
		end
	end
end

-- Update Live Power Meter
local function updatePowerMeter()
	local now = tick()
	-- Remove timestamps older than 1 second
	for i = #hitTimestamps, 1, -1 do
		if now - hitTimestamps[i] > 1 then
			table.remove(hitTimestamps, i)
		end
	end

	local hitsPerSec = #hitTimestamps
	if hitsPerSec > 600 then
		powerLabel.Text = "Overload: " .. hitsPerSec .. "/s"
		powerLabel.TextColor3 = Color3.fromRGB(255, 0, 0)
	else
		powerLabel.Text = "Power: " .. hitsPerSec .. "/s"
		powerLabel.TextColor3 = Color3.fromRGB(0, 255, 0)
	end
end

-- Toggle Logic
local function toggleAttack()
	attacking = not attacking
	attackSessionId += 1
	local session = attackSessionId
	toolButton.Text = attacking and "ON" or "OFF"

	if not attacking then
		if player.Character then
			for _, tool in ipairs(player.Character:GetChildren()) do
				if tool:IsA("Tool") then
					tool.Parent = player.Backpack
				end
			end
		end
	else
		equipAllTools()
	end
end

-- Button Click
toolButton.MouseButton1Click:Connect(toggleAttack)

-- Hotkey: F
UserInputService.InputBegan:Connect(function(input, gp)
	if not gp and input.KeyCode == Enum.KeyCode.F then
		toggleAttack()
	end
end)

-- Auto Equip on Tool Add
player.Backpack.ChildAdded:Connect(function(child)
	if child:IsA("Tool") and attacking then
		child.Parent = player.Character
	end
end)

-- Re-equip on Respawn
player.CharacterAdded:Connect(function()
	task.wait(1)
	if attacking then
		equipAllTools()
	end
end)

-- Main Activation Loop
RunService.Heartbeat:Connect(function()
	updatePowerMeter()

	if not attacking or not player.Character then return end
	local session = attackSessionId
	local hitsThisFrame = 0

	for _, tool in ipairs(player.Character:GetChildren()) do
		if not attacking or session ~= attackSessionId then break end
		if tool:IsA("Tool") then
			pcall(function()
				for _ = 1, 3 do
					if not attacking or session ~= attackSessionId then break end
					if hitsThisFrame >= MAX_HITS_PER_FRAME then break end
					tool:Activate()
					hitsThisFrame += 1
					table.insert(hitTimestamps, tick())
				end
			end)
		end
	end
end)
